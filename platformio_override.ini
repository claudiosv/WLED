[platformio]
default_envs = soundReactive_m5c ;orange_vest, guppy, camp_sign, esp32_eth_dev

[technogecko]
common_build_flags =
 -D WLED_DISABLE_ALEXA
 -D WLED_DISABLE_BLYNK
 -D WLED_DISABLE_HUESYNC
 -D WLED_DISABLE_INFRARED
 -D WLED_DISABLE_WEBSOCKETS
 -D WLED_DISABLE_LOXONE
m5atom_flags  =  ${common.build_flags_esp32} -D LEDPIN=27 -D BTNPIN=39 ${technogecko.common_build_flags}

[env:orange_vest]
extends = env:m5atom
build_flags = ${technogecko.m5atom_flags}
 -D WLED_RELEASE_NAME=orange_vest_sr
; -D CLIENT_SSID="TechnoGecko"
; -D CLIENT_PASS="theshiniestlizard"
; set the number of LEDs
  -D DEFAULT_LED_COUNT=144
; can be changed anyway runtime but increase if your vest actually works :<
; 25 for the matrix + 108 + 144 + 108
; set milliampere limit when using ESP pin to power leds
;   -D ABL_MILLIAMPS_DEFAULT=850 # max amp can be set
; set the name of the module - make sure there is a quote-backslash-quote before the name and a backslash-quote-quote after the name
   -D SERVERNAME="\"vest\""

[env:soundReactive_m5stick]
board = m5stick-c
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
; upload_speed = 921600
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_RELEASE_NAME=M5SR -D WLED_DISABLE_MQTT -D WLED_DISABLE_LOXONE
lib_deps = ${esp32.lib_deps}
monitor_filters = esp32_exception_decoder
board_build.partitions = ${esp32.default_partitions}

[env:soundReactive_m5c]
; extends = env:soundReactive_m5atom
board = m5stick-c
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
; upload_speed = 1500000
; monitor_speed = 115200
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32}
  -D WLED_RELEASE_NAME=m5c_sr
  -D WLED_DISABLE_ALEXA
  -D WLED_DISABLE_BLYNK
  -D WLED_DISABLE_HUESYNC
  -D WLED_DISABLE_INFRARED
  -D WLED_DISABLE_WEBSOCKETS
  -D WLED_DISABLE_LOXONE
  -D I2S_USE_16BIT_SAMPLES
  -D DEFAULT_LED_COUNT=125
  -D LEDPIN=32
  -D BTNPIN=37,39
  -D LED_BUILTIN=10
  -D DMENABLED=5
  -D I2S_SDPIN=34
  -D I2S_WSPIN=0
  -D I2S_CKPIN=-1
  ; -D WLED_DEBUG
lib_deps = ${esp32.lib_deps}
monitor_filters = esp32_exception_decoder
board_build.partitions = ${esp32.default_partitions}

[env:guppy]
extends = env:m5atom
build_flags = ${technogecko.m5atom_flags}
 -D WLED_RELEASE_NAME=guppy_sr
 -D CLIENT_SSID="\"TechnoGecko\""
 -D CLIENT_PASS="\"theshiniestlizard\""
 -D SERVERNAME="\"guppy\""

[env:camp_sign]
extends = env:m5atom
build_flags = ${technogecko.m5atom_flags}
 -D WLED_RELEASE_NAME=campsign_sr
 -D CLIENT_SSID="\"TechnoGecko\""
 -D CLIENT_PASS="\"theshiniestlizard\""
 -D SERVERNAME="\"campsign\""

[env:esp32_eth_dev]
extends = env:esp32_eth
build_flags = ${common.build_flags_esp32} ${technogecko.common_build_flags}
 -D WLED_RELEASE_NAME=ESP32_Ethernet
 -D WLED_USE_ETHERNET
 -D RLYPIN=-1
 -D BTNPIN=34
 -D WLED_ETH_DEFAULT=2 # ESP32-POE pinout via ethernetBoards from WLED_ETH_ESP32_POE
 -D SERVERNAME="\"esp32-poe\""